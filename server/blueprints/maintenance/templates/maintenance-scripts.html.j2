{% block scr %}

<script>
  //Calls functions to load defaults and info.
  document.addEventListener("DOMContentLoaded", function() {

  });

  window.onload = function() {
    updateMaintEvents();
  };


  function updateMaintEvents() {
    ms = Date.now();
    console.log("Start", JSON.parse('{{ status | tojson | safe}}'))
    var status = JSON.parse('{{ status | tojson | safe}}');
    document.getElementById("id-changeWater").prepend(timeDifference(ms, new Date(status.maintenance[0].changeWater)) + " / ");
    document.getElementById("id-addH2O2").prepend(timeDifference(ms, new Date(status.maintenance[0].addH2O2)) + " / ");
    document.getElementById("id-addNutrients").prepend(timeDifference(ms, new Date(status.maintenance[0].addNutrients)) + " / ");
    document.getElementById("id-towerMaintenance").prepend(timeDifference(ms, new Date(status.maintenance[0].towerMaintenance)) + " / ");
    document.getElementById("id-tankMaintenance").prepend(timeDifference(ms, new Date(status.maintenance[0].tankMaintenance)) + " / ");
    document.getElementById("id-topWater").prepend(timeDifference(ms, new Date(status.maintenance[0].topWater)) + " / ");
  }

  function timeDifference(date1, date2) {
    const d1 = new Date(date1);
    const d2 = new Date(date2);
    const diffTime = Math.abs(date2 - date1);
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    //console.log(diffTime + " milliseconds");
    //console.log(diffDays + " days");
    return diffDays
  }


  function postCommand(cmd, location) {
    const URL = `${window.origin}/api/` + location
    // post body data
    const command = {
      command: cmd
    };

    // request options
    const options = {
      method: 'POST',
      body: JSON.stringify(command),
      headers: {
        'Content-Type': 'application/json'
      }
    }
    // send POST request
    fetch(URL, options)
      .then(res => res.json())
  }

  function resetTime(task) {
    const command = {
      taskPerformed: task,
      newDate: (new Date().toJSON())
    };
    console.log(command)
    postCommand(command, 'resetMaintInterval')
  }
</script>
{% endblock scr %}
